{"ast":null,"code":"'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar transitionalDefaults = require('../defaults/transitional');\nvar AxiosError = require('../core/AxiosError');\nvar CanceledError = require('../cancel/CanceledError');\nvar parseProtocol = require('../helpers/parseProtocol');\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' || responseType === 'json' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(timeoutErrorMessage, transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function (cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel && cancel.type ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n    if (!requestData) {\n      requestData = null;\n    }\n    var protocol = parseProtocol(fullPath);\n    if (protocol && ['http', 'https', 'file'].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};","map":{"version":3,"names":["utils","require","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","transitionalDefaults","AxiosError","CanceledError","parseProtocol","module","exports","xhrAdapter","config","Promise","dispatchXhrRequest","resolve","reject","requestData","data","requestHeaders","headers","responseType","onCanceled","done","cancelToken","unsubscribe","signal","removeEventListener","isFormData","isStandardBrowserEnv","request","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","url","open","method","toUpperCase","params","paramsSerializer","timeout","onloadend","responseHeaders","getAllResponseHeaders","responseData","responseText","response","status","statusText","_resolve","value","_reject","err","onreadystatechange","handleLoad","readyState","responseURL","indexOf","setTimeout","onabort","handleAbort","ECONNABORTED","onerror","handleError","ERR_NETWORK","ontimeout","handleTimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","ETIMEDOUT","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","setRequestHeader","val","key","toLowerCase","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","type","abort","subscribe","aborted","protocol","ERR_BAD_REQUEST","send"],"sources":["/Users/mac/Desktop/article/reactrbac/node_modules/axios/lib/adapters/xhr.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar transitionalDefaults = require('../defaults/transitional');\nvar AxiosError = require('../core/AxiosError');\nvar CanceledError = require('../cancel/CanceledError');\nvar parseProtocol = require('../helpers/parseProtocol');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var protocol = parseProtocol(fullPath);\n\n    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}